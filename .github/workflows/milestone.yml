name: milestone

on:
  push:
    branches: [master]

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

jobs:
  set-milestone:
    if: github.repository_owner == 'hashhar'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get milestone from pom.xml
        run: |
          .github/bin/retry ./mvnw -v
          echo "MILESTONE_NUMBER=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | cut -d- -f1)" >> $GITHUB_ENV
      - name: Set milestone to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // Get pull request number from commit sha
            // 'listPullRequestsAssociatedWithCommit()' lists the merged pull request
            // https://docs.github.com/en/rest/reference/repos#list-pull-requests-associated-with-a-commit
            // and https://octokit.github.io/rest.js/v19#repos-list-pull-requests-associated-with-commit
            const pr_response = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha
            })
            if (pr_response.data.length === 0) {
                console.log('Pull request not found')
                return
            }
            if (pr_response.data.length > 1) {
                console.log(pr_response.data)
                throw 'Expect 1 pull request but found: ' + pr_response.data.length
            }

            // Get milestone
            const {
                MILESTONE_NUMBER
            } = process.env

            // Find milestone
            const listMilestones = github.rest.issues.listMilestones({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'all'
            })
            const response = await github.paginate(listMilestones)
            let milestone = response.data.find(milestoneResponse => milestoneResponse.title === MILESTONE_NUMBER)
            console.log('findMilestone response', milestone)

            // Create new milestone if it doesn't exist
            if (!milestone) {
                console.log('Creating new milestone', !milestone)
                const create_response = await github.rest.issues.createMilestone({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: MILESTONE_NUMBER
                })
                console.log('createMilestone response', create_response)
                milestone = create_response.data
            }

            console.log('created milestone', milestone)
            // Set milestone to PR
            await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                milestone: milestone.number,
                issue_number: pr_response.data[0].number
            })
